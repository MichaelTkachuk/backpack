// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Android BpkCard should render correctly 1`] = `
<View
  style={null}
>
  <View
    accessibilityComponentType="button"
    accessibilityLabel="Example Card"
    accessibilityTraits={undefined}
    accessible={true}
    hitSlop={undefined}
    nativeBackgroundAndroid={
      Object {
        "attribute": "selectableItemBackgroundBorderless",
        "type": "ThemeAttrAndroid",
      }
    }
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "rgb(255, 255, 255)",
          "borderRadius": 2,
          "elevation": 2,
        },
        Object {
          "padding": 16,
        },
      ]
    }
    testID={undefined}
  >
    <View
      style={null}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgb(82, 76, 97)",
              "fontFamily": "sans-serif",
              "fontSize": 16,
              "fontWeight": "400",
            },
            Object {},
          ]
        }
      >
        Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.
      </Text>
    </View>
  </View>
</View>
`;

exports[`Android BpkCard should render correctly with arbitrary props 1`] = `
<View
  style={null}
>
  <View
    accessibilityComponentType="button"
    accessibilityLabel="Example Card"
    accessibilityTraits={undefined}
    accessible={true}
    hitSlop={undefined}
    nativeBackgroundAndroid={
      Object {
        "attribute": "selectableItemBackgroundBorderless",
        "type": "ThemeAttrAndroid",
      }
    }
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "rgb(255, 255, 255)",
          "borderRadius": 2,
          "elevation": 2,
        },
        Object {
          "padding": 16,
        },
      ]
    }
    testID="arbitrary value"
  >
    <View
      style={null}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgb(82, 76, 97)",
              "fontFamily": "sans-serif",
              "fontSize": 16,
              "fontWeight": "400",
            },
            Object {},
          ]
        }
      >
        Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.
      </Text>
    </View>
  </View>
</View>
`;

exports[`Android BpkCard should render correctly with custom inner style 1`] = `
<View
  style={null}
>
  <View
    accessibilityComponentType="button"
    accessibilityLabel="Example Card"
    accessibilityTraits={undefined}
    accessible={true}
    hitSlop={undefined}
    nativeBackgroundAndroid={
      Object {
        "attribute": "selectableItemBackgroundBorderless",
        "type": "ThemeAttrAndroid",
      }
    }
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "rgb(255, 255, 255)",
          "borderRadius": 2,
          "elevation": 2,
        },
        Object {
          "padding": 16,
        },
      ]
    }
    testID={undefined}
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgb(82, 76, 97)",
              "fontFamily": "sans-serif",
              "fontSize": 16,
              "fontWeight": "400",
            },
            Object {},
          ]
        }
      >
        Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.
      </Text>
    </View>
  </View>
</View>
`;

exports[`Android BpkCard should render correctly with custom style 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    accessibilityComponentType="button"
    accessibilityLabel="Example Card"
    accessibilityTraits={undefined}
    accessible={true}
    hitSlop={undefined}
    nativeBackgroundAndroid={
      Object {
        "attribute": "selectableItemBackgroundBorderless",
        "type": "ThemeAttrAndroid",
      }
    }
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "rgb(255, 255, 255)",
          "borderRadius": 2,
          "elevation": 2,
        },
        Object {
          "padding": 16,
        },
        Object {
          "flex": 1,
        },
      ]
    }
    testID={undefined}
  >
    <View
      style={null}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgb(82, 76, 97)",
              "fontFamily": "sans-serif",
              "fontSize": 16,
              "fontWeight": "400",
            },
            Object {},
          ]
        }
      >
        Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.
      </Text>
    </View>
  </View>
</View>
`;

exports[`Android BpkCard should render correctly with the "focused" state 1`] = `
<View
  style={null}
>
  <View
    accessibilityComponentType="button"
    accessibilityLabel="Example Card"
    accessibilityTraits={undefined}
    accessible={true}
    hitSlop={undefined}
    nativeBackgroundAndroid={
      Object {
        "attribute": "selectableItemBackgroundBorderless",
        "type": "ThemeAttrAndroid",
      }
    }
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "rgb(255, 255, 255)",
          "borderRadius": 2,
          "elevation": 2,
        },
        Object {
          "padding": 16,
        },
        Object {
          "elevation": 16,
        },
      ]
    }
    testID={undefined}
  >
    <View
      style={null}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgb(82, 76, 97)",
              "fontFamily": "sans-serif",
              "fontSize": 16,
              "fontWeight": "400",
            },
            Object {},
          ]
        }
      >
        Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.
      </Text>
    </View>
  </View>
</View>
`;

exports[`Android BpkCard should render correctly without padding 1`] = `
<View
  style={null}
>
  <View
    accessibilityComponentType="button"
    accessibilityLabel="Example Card"
    accessibilityTraits={undefined}
    accessible={true}
    hitSlop={undefined}
    nativeBackgroundAndroid={
      Object {
        "attribute": "selectableItemBackgroundBorderless",
        "type": "ThemeAttrAndroid",
      }
    }
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "rgb(255, 255, 255)",
          "borderRadius": 2,
          "elevation": 2,
        },
      ]
    }
    testID={undefined}
  >
    <View
      style={null}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgb(82, 76, 97)",
              "fontFamily": "sans-serif",
              "fontSize": 16,
              "fontWeight": "400",
            },
            Object {},
          ]
        }
      >
        Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.
      </Text>
    </View>
  </View>
</View>
`;
